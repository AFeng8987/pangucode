package org.linlinjava.litemall.db.domain;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class LitemallAllianceSaleExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_alliance_sale
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_alliance_sale
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_alliance_sale
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_alliance_sale
     *
     * @mbg.generated
     */
    public LitemallAllianceSaleExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_alliance_sale
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_alliance_sale
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_alliance_sale
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_alliance_sale
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_alliance_sale
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_alliance_sale
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_alliance_sale
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_alliance_sale
     *
     * @mbg.generated
     */
    public LitemallAllianceSaleExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_alliance_sale
     *
     * @mbg.generated
     */
    public LitemallAllianceSaleExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_alliance_sale
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_alliance_sale
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_alliance_sale
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_alliance_sale
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        LitemallAllianceSaleExample example = new LitemallAllianceSaleExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_alliance_sale
     *
     * @mbg.generated
     */
    public LitemallAllianceSaleExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_alliance_sale
     *
     * @mbg.generated
     */
    public LitemallAllianceSaleExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_alliance_sale
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andAllianceNameIsNull() {
            addCriterion("alliance_name is null");
            return (Criteria) this;
        }

        public Criteria andAllianceNameIsNotNull() {
            addCriterion("alliance_name is not null");
            return (Criteria) this;
        }

        public Criteria andAllianceNameEqualTo(String value) {
            addCriterion("alliance_name =", value, "allianceName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andAllianceNameEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("alliance_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAllianceNameNotEqualTo(String value) {
            addCriterion("alliance_name <>", value, "allianceName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andAllianceNameNotEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("alliance_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAllianceNameGreaterThan(String value) {
            addCriterion("alliance_name >", value, "allianceName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andAllianceNameGreaterThanColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("alliance_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAllianceNameGreaterThanOrEqualTo(String value) {
            addCriterion("alliance_name >=", value, "allianceName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andAllianceNameGreaterThanOrEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("alliance_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAllianceNameLessThan(String value) {
            addCriterion("alliance_name <", value, "allianceName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andAllianceNameLessThanColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("alliance_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAllianceNameLessThanOrEqualTo(String value) {
            addCriterion("alliance_name <=", value, "allianceName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andAllianceNameLessThanOrEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("alliance_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAllianceNameLike(String value) {
            addCriterion("alliance_name like", value, "allianceName");
            return (Criteria) this;
        }

        public Criteria andAllianceNameNotLike(String value) {
            addCriterion("alliance_name not like", value, "allianceName");
            return (Criteria) this;
        }

        public Criteria andAllianceNameIn(List<String> values) {
            addCriterion("alliance_name in", values, "allianceName");
            return (Criteria) this;
        }

        public Criteria andAllianceNameNotIn(List<String> values) {
            addCriterion("alliance_name not in", values, "allianceName");
            return (Criteria) this;
        }

        public Criteria andAllianceNameBetween(String value1, String value2) {
            addCriterion("alliance_name between", value1, value2, "allianceName");
            return (Criteria) this;
        }

        public Criteria andAllianceNameNotBetween(String value1, String value2) {
            addCriterion("alliance_name not between", value1, value2, "allianceName");
            return (Criteria) this;
        }

        public Criteria andAllianceUseridIsNull() {
            addCriterion("alliance_userid is null");
            return (Criteria) this;
        }

        public Criteria andAllianceUseridIsNotNull() {
            addCriterion("alliance_userid is not null");
            return (Criteria) this;
        }

        public Criteria andAllianceUseridEqualTo(Integer value) {
            addCriterion("alliance_userid =", value, "allianceUserid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andAllianceUseridEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("alliance_userid = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAllianceUseridNotEqualTo(Integer value) {
            addCriterion("alliance_userid <>", value, "allianceUserid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andAllianceUseridNotEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("alliance_userid <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAllianceUseridGreaterThan(Integer value) {
            addCriterion("alliance_userid >", value, "allianceUserid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andAllianceUseridGreaterThanColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("alliance_userid > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAllianceUseridGreaterThanOrEqualTo(Integer value) {
            addCriterion("alliance_userid >=", value, "allianceUserid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andAllianceUseridGreaterThanOrEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("alliance_userid >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAllianceUseridLessThan(Integer value) {
            addCriterion("alliance_userid <", value, "allianceUserid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andAllianceUseridLessThanColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("alliance_userid < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAllianceUseridLessThanOrEqualTo(Integer value) {
            addCriterion("alliance_userid <=", value, "allianceUserid");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andAllianceUseridLessThanOrEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("alliance_userid <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAllianceUseridIn(List<Integer> values) {
            addCriterion("alliance_userid in", values, "allianceUserid");
            return (Criteria) this;
        }

        public Criteria andAllianceUseridNotIn(List<Integer> values) {
            addCriterion("alliance_userid not in", values, "allianceUserid");
            return (Criteria) this;
        }

        public Criteria andAllianceUseridBetween(Integer value1, Integer value2) {
            addCriterion("alliance_userid between", value1, value2, "allianceUserid");
            return (Criteria) this;
        }

        public Criteria andAllianceUseridNotBetween(Integer value1, Integer value2) {
            addCriterion("alliance_userid not between", value1, value2, "allianceUserid");
            return (Criteria) this;
        }

        public Criteria andOrderSnIsNull() {
            addCriterion("order_sn is null");
            return (Criteria) this;
        }

        public Criteria andOrderSnIsNotNull() {
            addCriterion("order_sn is not null");
            return (Criteria) this;
        }

        public Criteria andOrderSnEqualTo(String value) {
            addCriterion("order_sn =", value, "orderSn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andOrderSnEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("order_sn = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderSnNotEqualTo(String value) {
            addCriterion("order_sn <>", value, "orderSn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andOrderSnNotEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("order_sn <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderSnGreaterThan(String value) {
            addCriterion("order_sn >", value, "orderSn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andOrderSnGreaterThanColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("order_sn > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderSnGreaterThanOrEqualTo(String value) {
            addCriterion("order_sn >=", value, "orderSn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andOrderSnGreaterThanOrEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("order_sn >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderSnLessThan(String value) {
            addCriterion("order_sn <", value, "orderSn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andOrderSnLessThanColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("order_sn < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderSnLessThanOrEqualTo(String value) {
            addCriterion("order_sn <=", value, "orderSn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andOrderSnLessThanOrEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("order_sn <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderSnLike(String value) {
            addCriterion("order_sn like", value, "orderSn");
            return (Criteria) this;
        }

        public Criteria andOrderSnNotLike(String value) {
            addCriterion("order_sn not like", value, "orderSn");
            return (Criteria) this;
        }

        public Criteria andOrderSnIn(List<String> values) {
            addCriterion("order_sn in", values, "orderSn");
            return (Criteria) this;
        }

        public Criteria andOrderSnNotIn(List<String> values) {
            addCriterion("order_sn not in", values, "orderSn");
            return (Criteria) this;
        }

        public Criteria andOrderSnBetween(String value1, String value2) {
            addCriterion("order_sn between", value1, value2, "orderSn");
            return (Criteria) this;
        }

        public Criteria andOrderSnNotBetween(String value1, String value2) {
            addCriterion("order_sn not between", value1, value2, "orderSn");
            return (Criteria) this;
        }

        public Criteria andOrderGoodsIdIsNull() {
            addCriterion("order_goods_id is null");
            return (Criteria) this;
        }

        public Criteria andOrderGoodsIdIsNotNull() {
            addCriterion("order_goods_id is not null");
            return (Criteria) this;
        }

        public Criteria andOrderGoodsIdEqualTo(Integer value) {
            addCriterion("order_goods_id =", value, "orderGoodsId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andOrderGoodsIdEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("order_goods_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderGoodsIdNotEqualTo(Integer value) {
            addCriterion("order_goods_id <>", value, "orderGoodsId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andOrderGoodsIdNotEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("order_goods_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderGoodsIdGreaterThan(Integer value) {
            addCriterion("order_goods_id >", value, "orderGoodsId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andOrderGoodsIdGreaterThanColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("order_goods_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderGoodsIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("order_goods_id >=", value, "orderGoodsId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andOrderGoodsIdGreaterThanOrEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("order_goods_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderGoodsIdLessThan(Integer value) {
            addCriterion("order_goods_id <", value, "orderGoodsId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andOrderGoodsIdLessThanColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("order_goods_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderGoodsIdLessThanOrEqualTo(Integer value) {
            addCriterion("order_goods_id <=", value, "orderGoodsId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andOrderGoodsIdLessThanOrEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("order_goods_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderGoodsIdIn(List<Integer> values) {
            addCriterion("order_goods_id in", values, "orderGoodsId");
            return (Criteria) this;
        }

        public Criteria andOrderGoodsIdNotIn(List<Integer> values) {
            addCriterion("order_goods_id not in", values, "orderGoodsId");
            return (Criteria) this;
        }

        public Criteria andOrderGoodsIdBetween(Integer value1, Integer value2) {
            addCriterion("order_goods_id between", value1, value2, "orderGoodsId");
            return (Criteria) this;
        }

        public Criteria andOrderGoodsIdNotBetween(Integer value1, Integer value2) {
            addCriterion("order_goods_id not between", value1, value2, "orderGoodsId");
            return (Criteria) this;
        }

        public Criteria andCategoryIdIsNull() {
            addCriterion("category_id is null");
            return (Criteria) this;
        }

        public Criteria andCategoryIdIsNotNull() {
            addCriterion("category_id is not null");
            return (Criteria) this;
        }

        public Criteria andCategoryIdEqualTo(Integer value) {
            addCriterion("category_id =", value, "categoryId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andCategoryIdEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("category_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryIdNotEqualTo(Integer value) {
            addCriterion("category_id <>", value, "categoryId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andCategoryIdNotEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("category_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryIdGreaterThan(Integer value) {
            addCriterion("category_id >", value, "categoryId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andCategoryIdGreaterThanColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("category_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("category_id >=", value, "categoryId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andCategoryIdGreaterThanOrEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("category_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryIdLessThan(Integer value) {
            addCriterion("category_id <", value, "categoryId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andCategoryIdLessThanColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("category_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryIdLessThanOrEqualTo(Integer value) {
            addCriterion("category_id <=", value, "categoryId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andCategoryIdLessThanOrEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("category_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCategoryIdIn(List<Integer> values) {
            addCriterion("category_id in", values, "categoryId");
            return (Criteria) this;
        }

        public Criteria andCategoryIdNotIn(List<Integer> values) {
            addCriterion("category_id not in", values, "categoryId");
            return (Criteria) this;
        }

        public Criteria andCategoryIdBetween(Integer value1, Integer value2) {
            addCriterion("category_id between", value1, value2, "categoryId");
            return (Criteria) this;
        }

        public Criteria andCategoryIdNotBetween(Integer value1, Integer value2) {
            addCriterion("category_id not between", value1, value2, "categoryId");
            return (Criteria) this;
        }

        public Criteria andGoodsNameIsNull() {
            addCriterion("goods_name is null");
            return (Criteria) this;
        }

        public Criteria andGoodsNameIsNotNull() {
            addCriterion("goods_name is not null");
            return (Criteria) this;
        }

        public Criteria andGoodsNameEqualTo(String value) {
            addCriterion("goods_name =", value, "goodsName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andGoodsNameEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("goods_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsNameNotEqualTo(String value) {
            addCriterion("goods_name <>", value, "goodsName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andGoodsNameNotEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("goods_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsNameGreaterThan(String value) {
            addCriterion("goods_name >", value, "goodsName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andGoodsNameGreaterThanColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("goods_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsNameGreaterThanOrEqualTo(String value) {
            addCriterion("goods_name >=", value, "goodsName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andGoodsNameGreaterThanOrEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("goods_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsNameLessThan(String value) {
            addCriterion("goods_name <", value, "goodsName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andGoodsNameLessThanColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("goods_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsNameLessThanOrEqualTo(String value) {
            addCriterion("goods_name <=", value, "goodsName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andGoodsNameLessThanOrEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("goods_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsNameLike(String value) {
            addCriterion("goods_name like", value, "goodsName");
            return (Criteria) this;
        }

        public Criteria andGoodsNameNotLike(String value) {
            addCriterion("goods_name not like", value, "goodsName");
            return (Criteria) this;
        }

        public Criteria andGoodsNameIn(List<String> values) {
            addCriterion("goods_name in", values, "goodsName");
            return (Criteria) this;
        }

        public Criteria andGoodsNameNotIn(List<String> values) {
            addCriterion("goods_name not in", values, "goodsName");
            return (Criteria) this;
        }

        public Criteria andGoodsNameBetween(String value1, String value2) {
            addCriterion("goods_name between", value1, value2, "goodsName");
            return (Criteria) this;
        }

        public Criteria andGoodsNameNotBetween(String value1, String value2) {
            addCriterion("goods_name not between", value1, value2, "goodsName");
            return (Criteria) this;
        }

        public Criteria andGoodsNumberIsNull() {
            addCriterion("goods_number is null");
            return (Criteria) this;
        }

        public Criteria andGoodsNumberIsNotNull() {
            addCriterion("goods_number is not null");
            return (Criteria) this;
        }

        public Criteria andGoodsNumberEqualTo(Integer value) {
            addCriterion("goods_number =", value, "goodsNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andGoodsNumberEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("goods_number = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsNumberNotEqualTo(Integer value) {
            addCriterion("goods_number <>", value, "goodsNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andGoodsNumberNotEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("goods_number <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsNumberGreaterThan(Integer value) {
            addCriterion("goods_number >", value, "goodsNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andGoodsNumberGreaterThanColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("goods_number > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsNumberGreaterThanOrEqualTo(Integer value) {
            addCriterion("goods_number >=", value, "goodsNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andGoodsNumberGreaterThanOrEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("goods_number >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsNumberLessThan(Integer value) {
            addCriterion("goods_number <", value, "goodsNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andGoodsNumberLessThanColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("goods_number < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsNumberLessThanOrEqualTo(Integer value) {
            addCriterion("goods_number <=", value, "goodsNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andGoodsNumberLessThanOrEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("goods_number <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsNumberIn(List<Integer> values) {
            addCriterion("goods_number in", values, "goodsNumber");
            return (Criteria) this;
        }

        public Criteria andGoodsNumberNotIn(List<Integer> values) {
            addCriterion("goods_number not in", values, "goodsNumber");
            return (Criteria) this;
        }

        public Criteria andGoodsNumberBetween(Integer value1, Integer value2) {
            addCriterion("goods_number between", value1, value2, "goodsNumber");
            return (Criteria) this;
        }

        public Criteria andGoodsNumberNotBetween(Integer value1, Integer value2) {
            addCriterion("goods_number not between", value1, value2, "goodsNumber");
            return (Criteria) this;
        }

        public Criteria andGoodsPriceIsNull() {
            addCriterion("goods_price is null");
            return (Criteria) this;
        }

        public Criteria andGoodsPriceIsNotNull() {
            addCriterion("goods_price is not null");
            return (Criteria) this;
        }

        public Criteria andGoodsPriceEqualTo(BigDecimal value) {
            addCriterion("goods_price =", value, "goodsPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andGoodsPriceEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("goods_price = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsPriceNotEqualTo(BigDecimal value) {
            addCriterion("goods_price <>", value, "goodsPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andGoodsPriceNotEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("goods_price <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsPriceGreaterThan(BigDecimal value) {
            addCriterion("goods_price >", value, "goodsPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andGoodsPriceGreaterThanColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("goods_price > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsPriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("goods_price >=", value, "goodsPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andGoodsPriceGreaterThanOrEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("goods_price >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsPriceLessThan(BigDecimal value) {
            addCriterion("goods_price <", value, "goodsPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andGoodsPriceLessThanColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("goods_price < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsPriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("goods_price <=", value, "goodsPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andGoodsPriceLessThanOrEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("goods_price <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodsPriceIn(List<BigDecimal> values) {
            addCriterion("goods_price in", values, "goodsPrice");
            return (Criteria) this;
        }

        public Criteria andGoodsPriceNotIn(List<BigDecimal> values) {
            addCriterion("goods_price not in", values, "goodsPrice");
            return (Criteria) this;
        }

        public Criteria andGoodsPriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("goods_price between", value1, value2, "goodsPrice");
            return (Criteria) this;
        }

        public Criteria andGoodsPriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("goods_price not between", value1, value2, "goodsPrice");
            return (Criteria) this;
        }

        public Criteria andPlantCostPriceIsNull() {
            addCriterion("plant_cost_price is null");
            return (Criteria) this;
        }

        public Criteria andPlantCostPriceIsNotNull() {
            addCriterion("plant_cost_price is not null");
            return (Criteria) this;
        }

        public Criteria andPlantCostPriceEqualTo(BigDecimal value) {
            addCriterion("plant_cost_price =", value, "plantCostPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andPlantCostPriceEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("plant_cost_price = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlantCostPriceNotEqualTo(BigDecimal value) {
            addCriterion("plant_cost_price <>", value, "plantCostPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andPlantCostPriceNotEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("plant_cost_price <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlantCostPriceGreaterThan(BigDecimal value) {
            addCriterion("plant_cost_price >", value, "plantCostPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andPlantCostPriceGreaterThanColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("plant_cost_price > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlantCostPriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("plant_cost_price >=", value, "plantCostPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andPlantCostPriceGreaterThanOrEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("plant_cost_price >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlantCostPriceLessThan(BigDecimal value) {
            addCriterion("plant_cost_price <", value, "plantCostPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andPlantCostPriceLessThanColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("plant_cost_price < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlantCostPriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("plant_cost_price <=", value, "plantCostPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andPlantCostPriceLessThanOrEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("plant_cost_price <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlantCostPriceIn(List<BigDecimal> values) {
            addCriterion("plant_cost_price in", values, "plantCostPrice");
            return (Criteria) this;
        }

        public Criteria andPlantCostPriceNotIn(List<BigDecimal> values) {
            addCriterion("plant_cost_price not in", values, "plantCostPrice");
            return (Criteria) this;
        }

        public Criteria andPlantCostPriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("plant_cost_price between", value1, value2, "plantCostPrice");
            return (Criteria) this;
        }

        public Criteria andPlantCostPriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("plant_cost_price not between", value1, value2, "plantCostPrice");
            return (Criteria) this;
        }

        public Criteria andCouponPriceIsNull() {
            addCriterion("coupon_price is null");
            return (Criteria) this;
        }

        public Criteria andCouponPriceIsNotNull() {
            addCriterion("coupon_price is not null");
            return (Criteria) this;
        }

        public Criteria andCouponPriceEqualTo(BigDecimal value) {
            addCriterion("coupon_price =", value, "couponPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andCouponPriceEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("coupon_price = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCouponPriceNotEqualTo(BigDecimal value) {
            addCriterion("coupon_price <>", value, "couponPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andCouponPriceNotEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("coupon_price <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCouponPriceGreaterThan(BigDecimal value) {
            addCriterion("coupon_price >", value, "couponPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andCouponPriceGreaterThanColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("coupon_price > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCouponPriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("coupon_price >=", value, "couponPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andCouponPriceGreaterThanOrEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("coupon_price >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCouponPriceLessThan(BigDecimal value) {
            addCriterion("coupon_price <", value, "couponPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andCouponPriceLessThanColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("coupon_price < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCouponPriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("coupon_price <=", value, "couponPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andCouponPriceLessThanOrEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("coupon_price <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCouponPriceIn(List<BigDecimal> values) {
            addCriterion("coupon_price in", values, "couponPrice");
            return (Criteria) this;
        }

        public Criteria andCouponPriceNotIn(List<BigDecimal> values) {
            addCriterion("coupon_price not in", values, "couponPrice");
            return (Criteria) this;
        }

        public Criteria andCouponPriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("coupon_price between", value1, value2, "couponPrice");
            return (Criteria) this;
        }

        public Criteria andCouponPriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("coupon_price not between", value1, value2, "couponPrice");
            return (Criteria) this;
        }

        public Criteria andTotalProfitIsNull() {
            addCriterion("total_profit is null");
            return (Criteria) this;
        }

        public Criteria andTotalProfitIsNotNull() {
            addCriterion("total_profit is not null");
            return (Criteria) this;
        }

        public Criteria andTotalProfitEqualTo(BigDecimal value) {
            addCriterion("total_profit =", value, "totalProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andTotalProfitEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("total_profit = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalProfitNotEqualTo(BigDecimal value) {
            addCriterion("total_profit <>", value, "totalProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andTotalProfitNotEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("total_profit <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalProfitGreaterThan(BigDecimal value) {
            addCriterion("total_profit >", value, "totalProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andTotalProfitGreaterThanColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("total_profit > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalProfitGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("total_profit >=", value, "totalProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andTotalProfitGreaterThanOrEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("total_profit >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalProfitLessThan(BigDecimal value) {
            addCriterion("total_profit <", value, "totalProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andTotalProfitLessThanColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("total_profit < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalProfitLessThanOrEqualTo(BigDecimal value) {
            addCriterion("total_profit <=", value, "totalProfit");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andTotalProfitLessThanOrEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("total_profit <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalProfitIn(List<BigDecimal> values) {
            addCriterion("total_profit in", values, "totalProfit");
            return (Criteria) this;
        }

        public Criteria andTotalProfitNotIn(List<BigDecimal> values) {
            addCriterion("total_profit not in", values, "totalProfit");
            return (Criteria) this;
        }

        public Criteria andTotalProfitBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("total_profit between", value1, value2, "totalProfit");
            return (Criteria) this;
        }

        public Criteria andTotalProfitNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("total_profit not between", value1, value2, "totalProfit");
            return (Criteria) this;
        }

        public Criteria andGroupIdIsNull() {
            addCriterion("group_id is null");
            return (Criteria) this;
        }

        public Criteria andGroupIdIsNotNull() {
            addCriterion("group_id is not null");
            return (Criteria) this;
        }

        public Criteria andGroupIdEqualTo(Integer value) {
            addCriterion("group_id =", value, "groupId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andGroupIdEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("group_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGroupIdNotEqualTo(Integer value) {
            addCriterion("group_id <>", value, "groupId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andGroupIdNotEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("group_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGroupIdGreaterThan(Integer value) {
            addCriterion("group_id >", value, "groupId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andGroupIdGreaterThanColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("group_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGroupIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("group_id >=", value, "groupId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andGroupIdGreaterThanOrEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("group_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGroupIdLessThan(Integer value) {
            addCriterion("group_id <", value, "groupId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andGroupIdLessThanColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("group_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGroupIdLessThanOrEqualTo(Integer value) {
            addCriterion("group_id <=", value, "groupId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andGroupIdLessThanOrEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("group_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGroupIdIn(List<Integer> values) {
            addCriterion("group_id in", values, "groupId");
            return (Criteria) this;
        }

        public Criteria andGroupIdNotIn(List<Integer> values) {
            addCriterion("group_id not in", values, "groupId");
            return (Criteria) this;
        }

        public Criteria andGroupIdBetween(Integer value1, Integer value2) {
            addCriterion("group_id between", value1, value2, "groupId");
            return (Criteria) this;
        }

        public Criteria andGroupIdNotBetween(Integer value1, Integer value2) {
            addCriterion("group_id not between", value1, value2, "groupId");
            return (Criteria) this;
        }

        public Criteria andPlantIdIsNull() {
            addCriterion("plant_id is null");
            return (Criteria) this;
        }

        public Criteria andPlantIdIsNotNull() {
            addCriterion("plant_id is not null");
            return (Criteria) this;
        }

        public Criteria andPlantIdEqualTo(Integer value) {
            addCriterion("plant_id =", value, "plantId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andPlantIdEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("plant_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlantIdNotEqualTo(Integer value) {
            addCriterion("plant_id <>", value, "plantId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andPlantIdNotEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("plant_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlantIdGreaterThan(Integer value) {
            addCriterion("plant_id >", value, "plantId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andPlantIdGreaterThanColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("plant_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlantIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("plant_id >=", value, "plantId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andPlantIdGreaterThanOrEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("plant_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlantIdLessThan(Integer value) {
            addCriterion("plant_id <", value, "plantId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andPlantIdLessThanColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("plant_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlantIdLessThanOrEqualTo(Integer value) {
            addCriterion("plant_id <=", value, "plantId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andPlantIdLessThanOrEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("plant_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlantIdIn(List<Integer> values) {
            addCriterion("plant_id in", values, "plantId");
            return (Criteria) this;
        }

        public Criteria andPlantIdNotIn(List<Integer> values) {
            addCriterion("plant_id not in", values, "plantId");
            return (Criteria) this;
        }

        public Criteria andPlantIdBetween(Integer value1, Integer value2) {
            addCriterion("plant_id between", value1, value2, "plantId");
            return (Criteria) this;
        }

        public Criteria andPlantIdNotBetween(Integer value1, Integer value2) {
            addCriterion("plant_id not between", value1, value2, "plantId");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNull() {
            addCriterion("add_time is null");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNotNull() {
            addCriterion("add_time is not null");
            return (Criteria) this;
        }

        public Criteria andAddTimeEqualTo(LocalDateTime value) {
            addCriterion("add_time =", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andAddTimeEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("add_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeNotEqualTo(LocalDateTime value) {
            addCriterion("add_time <>", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andAddTimeNotEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("add_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThan(LocalDateTime value) {
            addCriterion("add_time >", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("add_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time >=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanOrEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("add_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThan(LocalDateTime value) {
            addCriterion("add_time <", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("add_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time <=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanOrEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("add_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeIn(List<LocalDateTime> values) {
            addCriterion("add_time in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotIn(List<LocalDateTime> values) {
            addCriterion("add_time not in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time not between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andOrderCloseTimeIsNull() {
            addCriterion("order_close_time is null");
            return (Criteria) this;
        }

        public Criteria andOrderCloseTimeIsNotNull() {
            addCriterion("order_close_time is not null");
            return (Criteria) this;
        }

        public Criteria andOrderCloseTimeEqualTo(LocalDateTime value) {
            addCriterion("order_close_time =", value, "orderCloseTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andOrderCloseTimeEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("order_close_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderCloseTimeNotEqualTo(LocalDateTime value) {
            addCriterion("order_close_time <>", value, "orderCloseTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andOrderCloseTimeNotEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("order_close_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderCloseTimeGreaterThan(LocalDateTime value) {
            addCriterion("order_close_time >", value, "orderCloseTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andOrderCloseTimeGreaterThanColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("order_close_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderCloseTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("order_close_time >=", value, "orderCloseTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andOrderCloseTimeGreaterThanOrEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("order_close_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderCloseTimeLessThan(LocalDateTime value) {
            addCriterion("order_close_time <", value, "orderCloseTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andOrderCloseTimeLessThanColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("order_close_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderCloseTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("order_close_time <=", value, "orderCloseTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andOrderCloseTimeLessThanOrEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("order_close_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderCloseTimeIn(List<LocalDateTime> values) {
            addCriterion("order_close_time in", values, "orderCloseTime");
            return (Criteria) this;
        }

        public Criteria andOrderCloseTimeNotIn(List<LocalDateTime> values) {
            addCriterion("order_close_time not in", values, "orderCloseTime");
            return (Criteria) this;
        }

        public Criteria andOrderCloseTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("order_close_time between", value1, value2, "orderCloseTime");
            return (Criteria) this;
        }

        public Criteria andOrderCloseTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("order_close_time not between", value1, value2, "orderCloseTime");
            return (Criteria) this;
        }

        public Criteria andOrderAddTimeIsNull() {
            addCriterion("order_add_time is null");
            return (Criteria) this;
        }

        public Criteria andOrderAddTimeIsNotNull() {
            addCriterion("order_add_time is not null");
            return (Criteria) this;
        }

        public Criteria andOrderAddTimeEqualTo(LocalDateTime value) {
            addCriterion("order_add_time =", value, "orderAddTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andOrderAddTimeEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("order_add_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderAddTimeNotEqualTo(LocalDateTime value) {
            addCriterion("order_add_time <>", value, "orderAddTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andOrderAddTimeNotEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("order_add_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderAddTimeGreaterThan(LocalDateTime value) {
            addCriterion("order_add_time >", value, "orderAddTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andOrderAddTimeGreaterThanColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("order_add_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderAddTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("order_add_time >=", value, "orderAddTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andOrderAddTimeGreaterThanOrEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("order_add_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderAddTimeLessThan(LocalDateTime value) {
            addCriterion("order_add_time <", value, "orderAddTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andOrderAddTimeLessThanColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("order_add_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderAddTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("order_add_time <=", value, "orderAddTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria andOrderAddTimeLessThanOrEqualToColumn(LitemallAllianceSale.Column column) {
            addCriterion(new StringBuilder("order_add_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrderAddTimeIn(List<LocalDateTime> values) {
            addCriterion("order_add_time in", values, "orderAddTime");
            return (Criteria) this;
        }

        public Criteria andOrderAddTimeNotIn(List<LocalDateTime> values) {
            addCriterion("order_add_time not in", values, "orderAddTime");
            return (Criteria) this;
        }

        public Criteria andOrderAddTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("order_add_time between", value1, value2, "orderAddTime");
            return (Criteria) this;
        }

        public Criteria andOrderAddTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("order_add_time not between", value1, value2, "orderAddTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_alliance_sale
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        private LitemallAllianceSaleExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        protected Criteria(LitemallAllianceSaleExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public LitemallAllianceSaleExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table litemall_alliance_sale
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_alliance_sale
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_alliance_sale
         *
         * @mbg.generated
         */
        void example(org.linlinjava.litemall.db.domain.LitemallAllianceSaleExample example);
    }
}