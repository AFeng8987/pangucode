package org.linlinjava.litemall.db.domain;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class LitemallPlantExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_plant
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_plant
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_plant
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_plant
     *
     * @mbg.generated
     */
    public LitemallPlantExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_plant
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_plant
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_plant
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_plant
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_plant
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_plant
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_plant
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_plant
     *
     * @mbg.generated
     */
    public LitemallPlantExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_plant
     *
     * @mbg.generated
     */
    public LitemallPlantExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_plant
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_plant
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_plant
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_plant
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        LitemallPlantExample example = new LitemallPlantExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_plant
     *
     * @mbg.generated
     */
    public LitemallPlantExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_plant
     *
     * @mbg.generated
     */
    public LitemallPlantExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_plant
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andPlantNameIsNull() {
            addCriterion("plant_name is null");
            return (Criteria) this;
        }

        public Criteria andPlantNameIsNotNull() {
            addCriterion("plant_name is not null");
            return (Criteria) this;
        }

        public Criteria andPlantNameEqualTo(String value) {
            addCriterion("plant_name =", value, "plantName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andPlantNameEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("plant_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlantNameNotEqualTo(String value) {
            addCriterion("plant_name <>", value, "plantName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andPlantNameNotEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("plant_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlantNameGreaterThan(String value) {
            addCriterion("plant_name >", value, "plantName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andPlantNameGreaterThanColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("plant_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlantNameGreaterThanOrEqualTo(String value) {
            addCriterion("plant_name >=", value, "plantName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andPlantNameGreaterThanOrEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("plant_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlantNameLessThan(String value) {
            addCriterion("plant_name <", value, "plantName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andPlantNameLessThanColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("plant_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlantNameLessThanOrEqualTo(String value) {
            addCriterion("plant_name <=", value, "plantName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andPlantNameLessThanOrEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("plant_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlantNameLike(String value) {
            addCriterion("plant_name like", value, "plantName");
            return (Criteria) this;
        }

        public Criteria andPlantNameNotLike(String value) {
            addCriterion("plant_name not like", value, "plantName");
            return (Criteria) this;
        }

        public Criteria andPlantNameIn(List<String> values) {
            addCriterion("plant_name in", values, "plantName");
            return (Criteria) this;
        }

        public Criteria andPlantNameNotIn(List<String> values) {
            addCriterion("plant_name not in", values, "plantName");
            return (Criteria) this;
        }

        public Criteria andPlantNameBetween(String value1, String value2) {
            addCriterion("plant_name between", value1, value2, "plantName");
            return (Criteria) this;
        }

        public Criteria andPlantNameNotBetween(String value1, String value2) {
            addCriterion("plant_name not between", value1, value2, "plantName");
            return (Criteria) this;
        }

        public Criteria andPlantContactsIsNull() {
            addCriterion("plant_contacts is null");
            return (Criteria) this;
        }

        public Criteria andPlantContactsIsNotNull() {
            addCriterion("plant_contacts is not null");
            return (Criteria) this;
        }

        public Criteria andPlantContactsEqualTo(String value) {
            addCriterion("plant_contacts =", value, "plantContacts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andPlantContactsEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("plant_contacts = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlantContactsNotEqualTo(String value) {
            addCriterion("plant_contacts <>", value, "plantContacts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andPlantContactsNotEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("plant_contacts <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlantContactsGreaterThan(String value) {
            addCriterion("plant_contacts >", value, "plantContacts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andPlantContactsGreaterThanColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("plant_contacts > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlantContactsGreaterThanOrEqualTo(String value) {
            addCriterion("plant_contacts >=", value, "plantContacts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andPlantContactsGreaterThanOrEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("plant_contacts >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlantContactsLessThan(String value) {
            addCriterion("plant_contacts <", value, "plantContacts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andPlantContactsLessThanColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("plant_contacts < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlantContactsLessThanOrEqualTo(String value) {
            addCriterion("plant_contacts <=", value, "plantContacts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andPlantContactsLessThanOrEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("plant_contacts <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlantContactsLike(String value) {
            addCriterion("plant_contacts like", value, "plantContacts");
            return (Criteria) this;
        }

        public Criteria andPlantContactsNotLike(String value) {
            addCriterion("plant_contacts not like", value, "plantContacts");
            return (Criteria) this;
        }

        public Criteria andPlantContactsIn(List<String> values) {
            addCriterion("plant_contacts in", values, "plantContacts");
            return (Criteria) this;
        }

        public Criteria andPlantContactsNotIn(List<String> values) {
            addCriterion("plant_contacts not in", values, "plantContacts");
            return (Criteria) this;
        }

        public Criteria andPlantContactsBetween(String value1, String value2) {
            addCriterion("plant_contacts between", value1, value2, "plantContacts");
            return (Criteria) this;
        }

        public Criteria andPlantContactsNotBetween(String value1, String value2) {
            addCriterion("plant_contacts not between", value1, value2, "plantContacts");
            return (Criteria) this;
        }

        public Criteria andPlantPhoneIsNull() {
            addCriterion("plant_phone is null");
            return (Criteria) this;
        }

        public Criteria andPlantPhoneIsNotNull() {
            addCriterion("plant_phone is not null");
            return (Criteria) this;
        }

        public Criteria andPlantPhoneEqualTo(String value) {
            addCriterion("plant_phone =", value, "plantPhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andPlantPhoneEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("plant_phone = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlantPhoneNotEqualTo(String value) {
            addCriterion("plant_phone <>", value, "plantPhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andPlantPhoneNotEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("plant_phone <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlantPhoneGreaterThan(String value) {
            addCriterion("plant_phone >", value, "plantPhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andPlantPhoneGreaterThanColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("plant_phone > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlantPhoneGreaterThanOrEqualTo(String value) {
            addCriterion("plant_phone >=", value, "plantPhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andPlantPhoneGreaterThanOrEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("plant_phone >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlantPhoneLessThan(String value) {
            addCriterion("plant_phone <", value, "plantPhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andPlantPhoneLessThanColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("plant_phone < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlantPhoneLessThanOrEqualTo(String value) {
            addCriterion("plant_phone <=", value, "plantPhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andPlantPhoneLessThanOrEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("plant_phone <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlantPhoneLike(String value) {
            addCriterion("plant_phone like", value, "plantPhone");
            return (Criteria) this;
        }

        public Criteria andPlantPhoneNotLike(String value) {
            addCriterion("plant_phone not like", value, "plantPhone");
            return (Criteria) this;
        }

        public Criteria andPlantPhoneIn(List<String> values) {
            addCriterion("plant_phone in", values, "plantPhone");
            return (Criteria) this;
        }

        public Criteria andPlantPhoneNotIn(List<String> values) {
            addCriterion("plant_phone not in", values, "plantPhone");
            return (Criteria) this;
        }

        public Criteria andPlantPhoneBetween(String value1, String value2) {
            addCriterion("plant_phone between", value1, value2, "plantPhone");
            return (Criteria) this;
        }

        public Criteria andPlantPhoneNotBetween(String value1, String value2) {
            addCriterion("plant_phone not between", value1, value2, "plantPhone");
            return (Criteria) this;
        }

        public Criteria andPlantAddressIsNull() {
            addCriterion("plant_address is null");
            return (Criteria) this;
        }

        public Criteria andPlantAddressIsNotNull() {
            addCriterion("plant_address is not null");
            return (Criteria) this;
        }

        public Criteria andPlantAddressEqualTo(String value) {
            addCriterion("plant_address =", value, "plantAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andPlantAddressEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("plant_address = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlantAddressNotEqualTo(String value) {
            addCriterion("plant_address <>", value, "plantAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andPlantAddressNotEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("plant_address <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlantAddressGreaterThan(String value) {
            addCriterion("plant_address >", value, "plantAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andPlantAddressGreaterThanColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("plant_address > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlantAddressGreaterThanOrEqualTo(String value) {
            addCriterion("plant_address >=", value, "plantAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andPlantAddressGreaterThanOrEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("plant_address >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlantAddressLessThan(String value) {
            addCriterion("plant_address <", value, "plantAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andPlantAddressLessThanColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("plant_address < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlantAddressLessThanOrEqualTo(String value) {
            addCriterion("plant_address <=", value, "plantAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andPlantAddressLessThanOrEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("plant_address <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlantAddressLike(String value) {
            addCriterion("plant_address like", value, "plantAddress");
            return (Criteria) this;
        }

        public Criteria andPlantAddressNotLike(String value) {
            addCriterion("plant_address not like", value, "plantAddress");
            return (Criteria) this;
        }

        public Criteria andPlantAddressIn(List<String> values) {
            addCriterion("plant_address in", values, "plantAddress");
            return (Criteria) this;
        }

        public Criteria andPlantAddressNotIn(List<String> values) {
            addCriterion("plant_address not in", values, "plantAddress");
            return (Criteria) this;
        }

        public Criteria andPlantAddressBetween(String value1, String value2) {
            addCriterion("plant_address between", value1, value2, "plantAddress");
            return (Criteria) this;
        }

        public Criteria andPlantAddressNotBetween(String value1, String value2) {
            addCriterion("plant_address not between", value1, value2, "plantAddress");
            return (Criteria) this;
        }

        public Criteria andSendContactsIsNull() {
            addCriterion("send_contacts is null");
            return (Criteria) this;
        }

        public Criteria andSendContactsIsNotNull() {
            addCriterion("send_contacts is not null");
            return (Criteria) this;
        }

        public Criteria andSendContactsEqualTo(String value) {
            addCriterion("send_contacts =", value, "sendContacts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andSendContactsEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("send_contacts = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSendContactsNotEqualTo(String value) {
            addCriterion("send_contacts <>", value, "sendContacts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andSendContactsNotEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("send_contacts <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSendContactsGreaterThan(String value) {
            addCriterion("send_contacts >", value, "sendContacts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andSendContactsGreaterThanColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("send_contacts > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSendContactsGreaterThanOrEqualTo(String value) {
            addCriterion("send_contacts >=", value, "sendContacts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andSendContactsGreaterThanOrEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("send_contacts >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSendContactsLessThan(String value) {
            addCriterion("send_contacts <", value, "sendContacts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andSendContactsLessThanColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("send_contacts < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSendContactsLessThanOrEqualTo(String value) {
            addCriterion("send_contacts <=", value, "sendContacts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andSendContactsLessThanOrEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("send_contacts <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSendContactsLike(String value) {
            addCriterion("send_contacts like", value, "sendContacts");
            return (Criteria) this;
        }

        public Criteria andSendContactsNotLike(String value) {
            addCriterion("send_contacts not like", value, "sendContacts");
            return (Criteria) this;
        }

        public Criteria andSendContactsIn(List<String> values) {
            addCriterion("send_contacts in", values, "sendContacts");
            return (Criteria) this;
        }

        public Criteria andSendContactsNotIn(List<String> values) {
            addCriterion("send_contacts not in", values, "sendContacts");
            return (Criteria) this;
        }

        public Criteria andSendContactsBetween(String value1, String value2) {
            addCriterion("send_contacts between", value1, value2, "sendContacts");
            return (Criteria) this;
        }

        public Criteria andSendContactsNotBetween(String value1, String value2) {
            addCriterion("send_contacts not between", value1, value2, "sendContacts");
            return (Criteria) this;
        }

        public Criteria andSendPhoneIsNull() {
            addCriterion("send_phone is null");
            return (Criteria) this;
        }

        public Criteria andSendPhoneIsNotNull() {
            addCriterion("send_phone is not null");
            return (Criteria) this;
        }

        public Criteria andSendPhoneEqualTo(String value) {
            addCriterion("send_phone =", value, "sendPhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andSendPhoneEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("send_phone = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSendPhoneNotEqualTo(String value) {
            addCriterion("send_phone <>", value, "sendPhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andSendPhoneNotEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("send_phone <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSendPhoneGreaterThan(String value) {
            addCriterion("send_phone >", value, "sendPhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andSendPhoneGreaterThanColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("send_phone > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSendPhoneGreaterThanOrEqualTo(String value) {
            addCriterion("send_phone >=", value, "sendPhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andSendPhoneGreaterThanOrEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("send_phone >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSendPhoneLessThan(String value) {
            addCriterion("send_phone <", value, "sendPhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andSendPhoneLessThanColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("send_phone < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSendPhoneLessThanOrEqualTo(String value) {
            addCriterion("send_phone <=", value, "sendPhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andSendPhoneLessThanOrEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("send_phone <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSendPhoneLike(String value) {
            addCriterion("send_phone like", value, "sendPhone");
            return (Criteria) this;
        }

        public Criteria andSendPhoneNotLike(String value) {
            addCriterion("send_phone not like", value, "sendPhone");
            return (Criteria) this;
        }

        public Criteria andSendPhoneIn(List<String> values) {
            addCriterion("send_phone in", values, "sendPhone");
            return (Criteria) this;
        }

        public Criteria andSendPhoneNotIn(List<String> values) {
            addCriterion("send_phone not in", values, "sendPhone");
            return (Criteria) this;
        }

        public Criteria andSendPhoneBetween(String value1, String value2) {
            addCriterion("send_phone between", value1, value2, "sendPhone");
            return (Criteria) this;
        }

        public Criteria andSendPhoneNotBetween(String value1, String value2) {
            addCriterion("send_phone not between", value1, value2, "sendPhone");
            return (Criteria) this;
        }

        public Criteria andSendAddressIsNull() {
            addCriterion("send_address is null");
            return (Criteria) this;
        }

        public Criteria andSendAddressIsNotNull() {
            addCriterion("send_address is not null");
            return (Criteria) this;
        }

        public Criteria andSendAddressEqualTo(String value) {
            addCriterion("send_address =", value, "sendAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andSendAddressEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("send_address = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSendAddressNotEqualTo(String value) {
            addCriterion("send_address <>", value, "sendAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andSendAddressNotEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("send_address <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSendAddressGreaterThan(String value) {
            addCriterion("send_address >", value, "sendAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andSendAddressGreaterThanColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("send_address > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSendAddressGreaterThanOrEqualTo(String value) {
            addCriterion("send_address >=", value, "sendAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andSendAddressGreaterThanOrEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("send_address >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSendAddressLessThan(String value) {
            addCriterion("send_address <", value, "sendAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andSendAddressLessThanColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("send_address < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSendAddressLessThanOrEqualTo(String value) {
            addCriterion("send_address <=", value, "sendAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andSendAddressLessThanOrEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("send_address <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSendAddressLike(String value) {
            addCriterion("send_address like", value, "sendAddress");
            return (Criteria) this;
        }

        public Criteria andSendAddressNotLike(String value) {
            addCriterion("send_address not like", value, "sendAddress");
            return (Criteria) this;
        }

        public Criteria andSendAddressIn(List<String> values) {
            addCriterion("send_address in", values, "sendAddress");
            return (Criteria) this;
        }

        public Criteria andSendAddressNotIn(List<String> values) {
            addCriterion("send_address not in", values, "sendAddress");
            return (Criteria) this;
        }

        public Criteria andSendAddressBetween(String value1, String value2) {
            addCriterion("send_address between", value1, value2, "sendAddress");
            return (Criteria) this;
        }

        public Criteria andSendAddressNotBetween(String value1, String value2) {
            addCriterion("send_address not between", value1, value2, "sendAddress");
            return (Criteria) this;
        }

        public Criteria andReceiveContactsIsNull() {
            addCriterion("receive_contacts is null");
            return (Criteria) this;
        }

        public Criteria andReceiveContactsIsNotNull() {
            addCriterion("receive_contacts is not null");
            return (Criteria) this;
        }

        public Criteria andReceiveContactsEqualTo(String value) {
            addCriterion("receive_contacts =", value, "receiveContacts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andReceiveContactsEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("receive_contacts = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReceiveContactsNotEqualTo(String value) {
            addCriterion("receive_contacts <>", value, "receiveContacts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andReceiveContactsNotEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("receive_contacts <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReceiveContactsGreaterThan(String value) {
            addCriterion("receive_contacts >", value, "receiveContacts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andReceiveContactsGreaterThanColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("receive_contacts > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReceiveContactsGreaterThanOrEqualTo(String value) {
            addCriterion("receive_contacts >=", value, "receiveContacts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andReceiveContactsGreaterThanOrEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("receive_contacts >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReceiveContactsLessThan(String value) {
            addCriterion("receive_contacts <", value, "receiveContacts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andReceiveContactsLessThanColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("receive_contacts < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReceiveContactsLessThanOrEqualTo(String value) {
            addCriterion("receive_contacts <=", value, "receiveContacts");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andReceiveContactsLessThanOrEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("receive_contacts <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReceiveContactsLike(String value) {
            addCriterion("receive_contacts like", value, "receiveContacts");
            return (Criteria) this;
        }

        public Criteria andReceiveContactsNotLike(String value) {
            addCriterion("receive_contacts not like", value, "receiveContacts");
            return (Criteria) this;
        }

        public Criteria andReceiveContactsIn(List<String> values) {
            addCriterion("receive_contacts in", values, "receiveContacts");
            return (Criteria) this;
        }

        public Criteria andReceiveContactsNotIn(List<String> values) {
            addCriterion("receive_contacts not in", values, "receiveContacts");
            return (Criteria) this;
        }

        public Criteria andReceiveContactsBetween(String value1, String value2) {
            addCriterion("receive_contacts between", value1, value2, "receiveContacts");
            return (Criteria) this;
        }

        public Criteria andReceiveContactsNotBetween(String value1, String value2) {
            addCriterion("receive_contacts not between", value1, value2, "receiveContacts");
            return (Criteria) this;
        }

        public Criteria andReceivePhoneIsNull() {
            addCriterion("receive_phone is null");
            return (Criteria) this;
        }

        public Criteria andReceivePhoneIsNotNull() {
            addCriterion("receive_phone is not null");
            return (Criteria) this;
        }

        public Criteria andReceivePhoneEqualTo(String value) {
            addCriterion("receive_phone =", value, "receivePhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andReceivePhoneEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("receive_phone = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReceivePhoneNotEqualTo(String value) {
            addCriterion("receive_phone <>", value, "receivePhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andReceivePhoneNotEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("receive_phone <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReceivePhoneGreaterThan(String value) {
            addCriterion("receive_phone >", value, "receivePhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andReceivePhoneGreaterThanColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("receive_phone > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReceivePhoneGreaterThanOrEqualTo(String value) {
            addCriterion("receive_phone >=", value, "receivePhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andReceivePhoneGreaterThanOrEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("receive_phone >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReceivePhoneLessThan(String value) {
            addCriterion("receive_phone <", value, "receivePhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andReceivePhoneLessThanColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("receive_phone < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReceivePhoneLessThanOrEqualTo(String value) {
            addCriterion("receive_phone <=", value, "receivePhone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andReceivePhoneLessThanOrEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("receive_phone <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReceivePhoneLike(String value) {
            addCriterion("receive_phone like", value, "receivePhone");
            return (Criteria) this;
        }

        public Criteria andReceivePhoneNotLike(String value) {
            addCriterion("receive_phone not like", value, "receivePhone");
            return (Criteria) this;
        }

        public Criteria andReceivePhoneIn(List<String> values) {
            addCriterion("receive_phone in", values, "receivePhone");
            return (Criteria) this;
        }

        public Criteria andReceivePhoneNotIn(List<String> values) {
            addCriterion("receive_phone not in", values, "receivePhone");
            return (Criteria) this;
        }

        public Criteria andReceivePhoneBetween(String value1, String value2) {
            addCriterion("receive_phone between", value1, value2, "receivePhone");
            return (Criteria) this;
        }

        public Criteria andReceivePhoneNotBetween(String value1, String value2) {
            addCriterion("receive_phone not between", value1, value2, "receivePhone");
            return (Criteria) this;
        }

        public Criteria andReceiveAddressIsNull() {
            addCriterion("receive_address is null");
            return (Criteria) this;
        }

        public Criteria andReceiveAddressIsNotNull() {
            addCriterion("receive_address is not null");
            return (Criteria) this;
        }

        public Criteria andReceiveAddressEqualTo(String value) {
            addCriterion("receive_address =", value, "receiveAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andReceiveAddressEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("receive_address = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReceiveAddressNotEqualTo(String value) {
            addCriterion("receive_address <>", value, "receiveAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andReceiveAddressNotEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("receive_address <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReceiveAddressGreaterThan(String value) {
            addCriterion("receive_address >", value, "receiveAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andReceiveAddressGreaterThanColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("receive_address > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReceiveAddressGreaterThanOrEqualTo(String value) {
            addCriterion("receive_address >=", value, "receiveAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andReceiveAddressGreaterThanOrEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("receive_address >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReceiveAddressLessThan(String value) {
            addCriterion("receive_address <", value, "receiveAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andReceiveAddressLessThanColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("receive_address < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReceiveAddressLessThanOrEqualTo(String value) {
            addCriterion("receive_address <=", value, "receiveAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andReceiveAddressLessThanOrEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("receive_address <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andReceiveAddressLike(String value) {
            addCriterion("receive_address like", value, "receiveAddress");
            return (Criteria) this;
        }

        public Criteria andReceiveAddressNotLike(String value) {
            addCriterion("receive_address not like", value, "receiveAddress");
            return (Criteria) this;
        }

        public Criteria andReceiveAddressIn(List<String> values) {
            addCriterion("receive_address in", values, "receiveAddress");
            return (Criteria) this;
        }

        public Criteria andReceiveAddressNotIn(List<String> values) {
            addCriterion("receive_address not in", values, "receiveAddress");
            return (Criteria) this;
        }

        public Criteria andReceiveAddressBetween(String value1, String value2) {
            addCriterion("receive_address between", value1, value2, "receiveAddress");
            return (Criteria) this;
        }

        public Criteria andReceiveAddressNotBetween(String value1, String value2) {
            addCriterion("receive_address not between", value1, value2, "receiveAddress");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNull() {
            addCriterion("add_time is null");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNotNull() {
            addCriterion("add_time is not null");
            return (Criteria) this;
        }

        public Criteria andAddTimeEqualTo(LocalDateTime value) {
            addCriterion("add_time =", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andAddTimeEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("add_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeNotEqualTo(LocalDateTime value) {
            addCriterion("add_time <>", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andAddTimeNotEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("add_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThan(LocalDateTime value) {
            addCriterion("add_time >", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("add_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time >=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanOrEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("add_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThan(LocalDateTime value) {
            addCriterion("add_time <", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("add_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time <=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanOrEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("add_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeIn(List<LocalDateTime> values) {
            addCriterion("add_time in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotIn(List<LocalDateTime> values) {
            addCriterion("add_time not in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time not between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNull() {
            addCriterion("deleted is null");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNotNull() {
            addCriterion("deleted is not null");
            return (Criteria) this;
        }

        public Criteria andDeletedEqualTo(Boolean value) {
            addCriterion("deleted =", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andDeletedEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("deleted = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedNotEqualTo(Boolean value) {
            addCriterion("deleted <>", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andDeletedNotEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("deleted <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThan(Boolean value) {
            addCriterion("deleted >", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("deleted > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("deleted >=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanOrEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("deleted >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThan(Boolean value) {
            addCriterion("deleted <", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("deleted < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThanOrEqualTo(Boolean value) {
            addCriterion("deleted <=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanOrEqualToColumn(LitemallPlant.Column column) {
            addCriterion(new StringBuilder("deleted <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedIn(List<Boolean> values) {
            addCriterion("deleted in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotIn(List<Boolean> values) {
            addCriterion("deleted not in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted between", value1, value2, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted not between", value1, value2, "deleted");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_plant
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        private LitemallPlantExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        protected Criteria(LitemallPlantExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public LitemallPlantExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        public Criteria andLogicalDeleted(boolean deleted) {
            return deleted ? andDeletedEqualTo(LitemallPlant.Deleted.IS_DELETED.value()) : andDeletedNotEqualTo(LitemallPlant.Deleted.IS_DELETED.value());
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table litemall_plant
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_plant
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_plant
         *
         * @mbg.generated
         */
        void example(org.linlinjava.litemall.db.domain.LitemallPlantExample example);
    }
}