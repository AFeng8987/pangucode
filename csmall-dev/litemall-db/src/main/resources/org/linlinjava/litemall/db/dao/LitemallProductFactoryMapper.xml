<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.linlinjava.litemall.db.dao.LitemallProductFactoryMapper">
  <resultMap id="BaseResultMap" type="org.linlinjava.litemall.db.domain.LitemallProductFactory">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="goods_code_id" jdbcType="INTEGER" property="goodsCodeId" />
    <result column="spec_code_id" jdbcType="INTEGER" property="specCodeId" />
    <result column="factory_id" jdbcType="INTEGER" property="factoryId" />
    <result column="cost_price" jdbcType="DECIMAL" property="costPrice" />
    <result column="goods_stock" jdbcType="INTEGER" property="goodsStock" />
    <result column="warn_stock" jdbcType="INTEGER" property="warnStock" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="buy_price" jdbcType="DECIMAL" property="buyPrice" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, goods_code_id, spec_code_id, factory_id, cost_price, goods_stock, warn_stock, 
    add_time, update_time, buy_price
  </sql>
  <select id="selectByExample" parameterType="org.linlinjava.litemall.db.domain.LitemallProductFactoryExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from litemall_product_factory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from litemall_product_factory
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from litemall_product_factory
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from litemall_product_factory
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from litemall_product_factory
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.linlinjava.litemall.db.domain.LitemallProductFactoryExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from litemall_product_factory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.linlinjava.litemall.db.domain.LitemallProductFactory">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into litemall_product_factory (goods_code_id, spec_code_id, factory_id, 
      cost_price, goods_stock, warn_stock, 
      add_time, update_time, buy_price
      )
    values (#{goodsCodeId,jdbcType=INTEGER}, #{specCodeId,jdbcType=INTEGER}, #{factoryId,jdbcType=INTEGER}, 
      #{costPrice,jdbcType=DECIMAL}, #{goodsStock,jdbcType=INTEGER}, #{warnStock,jdbcType=INTEGER}, 
      #{addTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{buyPrice,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.linlinjava.litemall.db.domain.LitemallProductFactory">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into litemall_product_factory
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodsCodeId != null">
        goods_code_id,
      </if>
      <if test="specCodeId != null">
        spec_code_id,
      </if>
      <if test="factoryId != null">
        factory_id,
      </if>
      <if test="costPrice != null">
        cost_price,
      </if>
      <if test="goodsStock != null">
        goods_stock,
      </if>
      <if test="warnStock != null">
        warn_stock,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="buyPrice != null">
        buy_price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodsCodeId != null">
        #{goodsCodeId,jdbcType=INTEGER},
      </if>
      <if test="specCodeId != null">
        #{specCodeId,jdbcType=INTEGER},
      </if>
      <if test="factoryId != null">
        #{factoryId,jdbcType=INTEGER},
      </if>
      <if test="costPrice != null">
        #{costPrice,jdbcType=DECIMAL},
      </if>
      <if test="goodsStock != null">
        #{goodsStock,jdbcType=INTEGER},
      </if>
      <if test="warnStock != null">
        #{warnStock,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="buyPrice != null">
        #{buyPrice,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.linlinjava.litemall.db.domain.LitemallProductFactoryExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from litemall_product_factory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update litemall_product_factory
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.goodsCodeId != null">
        goods_code_id = #{record.goodsCodeId,jdbcType=INTEGER},
      </if>
      <if test="record.specCodeId != null">
        spec_code_id = #{record.specCodeId,jdbcType=INTEGER},
      </if>
      <if test="record.factoryId != null">
        factory_id = #{record.factoryId,jdbcType=INTEGER},
      </if>
      <if test="record.costPrice != null">
        cost_price = #{record.costPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.goodsStock != null">
        goods_stock = #{record.goodsStock,jdbcType=INTEGER},
      </if>
      <if test="record.warnStock != null">
        warn_stock = #{record.warnStock,jdbcType=INTEGER},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.buyPrice != null">
        buy_price = #{record.buyPrice,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update litemall_product_factory
    set id = #{record.id,jdbcType=INTEGER},
      goods_code_id = #{record.goodsCodeId,jdbcType=INTEGER},
      spec_code_id = #{record.specCodeId,jdbcType=INTEGER},
      factory_id = #{record.factoryId,jdbcType=INTEGER},
      cost_price = #{record.costPrice,jdbcType=DECIMAL},
      goods_stock = #{record.goodsStock,jdbcType=INTEGER},
      warn_stock = #{record.warnStock,jdbcType=INTEGER},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      buy_price = #{record.buyPrice,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.linlinjava.litemall.db.domain.LitemallProductFactory">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update litemall_product_factory
    <set>
      <if test="goodsCodeId != null">
        goods_code_id = #{goodsCodeId,jdbcType=INTEGER},
      </if>
      <if test="specCodeId != null">
        spec_code_id = #{specCodeId,jdbcType=INTEGER},
      </if>
      <if test="factoryId != null">
        factory_id = #{factoryId,jdbcType=INTEGER},
      </if>
      <if test="costPrice != null">
        cost_price = #{costPrice,jdbcType=DECIMAL},
      </if>
      <if test="goodsStock != null">
        goods_stock = #{goodsStock,jdbcType=INTEGER},
      </if>
      <if test="warnStock != null">
        warn_stock = #{warnStock,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="buyPrice != null">
        buy_price = #{buyPrice,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.linlinjava.litemall.db.domain.LitemallProductFactory">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update litemall_product_factory
    set goods_code_id = #{goodsCodeId,jdbcType=INTEGER},
      spec_code_id = #{specCodeId,jdbcType=INTEGER},
      factory_id = #{factoryId,jdbcType=INTEGER},
      cost_price = #{costPrice,jdbcType=DECIMAL},
      goods_stock = #{goodsStock,jdbcType=INTEGER},
      warn_stock = #{warnStock,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      buy_price = #{buyPrice,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectOneByExample" parameterType="org.linlinjava.litemall.db.domain.LitemallProductFactoryExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    from litemall_product_factory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from litemall_product_factory
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into litemall_product_factory
    (goods_code_id, spec_code_id, factory_id, cost_price, goods_stock, warn_stock, add_time, 
      update_time, buy_price)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.goodsCodeId,jdbcType=INTEGER}, #{item.specCodeId,jdbcType=INTEGER}, #{item.factoryId,jdbcType=INTEGER}, 
        #{item.costPrice,jdbcType=DECIMAL}, #{item.goodsStock,jdbcType=INTEGER}, #{item.warnStock,jdbcType=INTEGER}, 
        #{item.addTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}, #{item.buyPrice,jdbcType=DECIMAL}
        )
    </foreach>
  </insert>
  <insert id="batchInsertSelective" keyColumn="id" keyProperty="list.id" parameterType="map" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into litemall_product_factory (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'goods_code_id'.toString() == column.value">
          #{item.goodsCodeId,jdbcType=INTEGER}
        </if>
        <if test="'spec_code_id'.toString() == column.value">
          #{item.specCodeId,jdbcType=INTEGER}
        </if>
        <if test="'factory_id'.toString() == column.value">
          #{item.factoryId,jdbcType=INTEGER}
        </if>
        <if test="'cost_price'.toString() == column.value">
          #{item.costPrice,jdbcType=DECIMAL}
        </if>
        <if test="'goods_stock'.toString() == column.value">
          #{item.goodsStock,jdbcType=INTEGER}
        </if>
        <if test="'warn_stock'.toString() == column.value">
          #{item.warnStock,jdbcType=INTEGER}
        </if>
        <if test="'add_time'.toString() == column.value">
          #{item.addTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'update_time'.toString() == column.value">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'buy_price'.toString() == column.value">
          #{item.buyPrice,jdbcType=DECIMAL}
        </if>
      </foreach>
      )
    </foreach>
  </insert>

    <select id="selInventory" resultType="java.lang.String">
    select goods_stock from litemall_product_factory where goods_code_id = #{goodsCodeId}
  </select>

    <select id="getOneByGoodId" resultMap="BaseResultMap">
    select * from litemall_product_factory
    where goods_code_id = #{goodsCodeId} and spec_code_id = #{specCodeId}
    order by goods_stock desc limit 1
  </select>
    <update id="reduceStock" parameterType="map">
    update litemall_product_factory
        set goods_stock = goods_stock - #{num,jdbcType=INTEGER}, update_time = now()
        where goods_code_id = #{id,jdbcType=INTEGER}
  </update>

    <update id="addStock" parameterType="map">
        update litemall_product_factory
        set goods_stock = goods_stock + #{num,jdbcType=INTEGER}, update_time = now()
        where goods_code_id = #{goodsCodeId,jdbcType=INTEGER}
        and spec_code_id = #{specCodeId,jdbcType=INTEGER}
        and factory_id = #{plantId,jdbcType=INTEGER}
    </update>

</mapper>